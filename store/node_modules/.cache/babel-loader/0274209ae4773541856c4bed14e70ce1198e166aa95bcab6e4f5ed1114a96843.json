{"ast":null,"code":"var _jsxFileName = \"/Users/yousuf/Dev/albertaducts-checkout/src/CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { serviceArray, getServiceData } from './serviceStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext({\n  items: [],\n  getServiceQuantity: () => {},\n  addOneToCart: () => {},\n  removeOneFromCart: () => {},\n  deleteFromCart: () => {},\n  getTotalCost: () => {}\n});\nexport function CartProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [cartServices, setCartServices] = useState([]);\n\n  // {id: 1, quantity: 2} data we are working with\n  const getServiceQuantity = id => {\n    var _cartServices$find;\n    const quantity = (_cartServices$find = cartServices.find(service => service.id === id)) === null || _cartServices$find === void 0 ? void 0 : _cartServices$find.quantity;\n    if (quantity === undefined) {\n      return 0;\n    }\n    return quantity;\n  };\n  function addOneToCart(id) {\n    /* \n        description: function thats adds one to quantity\n        pseudocode:\n        get service quantity by id\n        if service is not in cart, set quantity to 1\n        else add 1 to the servicequantity.\n    */\n    const quantity = getServiceQuantity(id);\n    if (quantity === 0) {\n      // service is not in cart\n      setCartServices([...cartServices, {\n        id: id,\n        quantity: 1\n      }]);\n    } else {\n      // service is in cart\n      setCartServices(cartServices.map(service => service.id === id // if condition\n      ? {\n        ...service,\n        quantity: service.quantity + 1\n      } //if statement is true\n      : service //\n      ) //if statement is false\n      );\n    }\n  }\n\n  const removeOneFromCart = id => {\n    /* \n    description: \n    removes 1 from quantity from matching id. if it has 1 item, and user removes, deletes full instance.\n    pseudocode:\n    if quantity equal to 1, remove it from array.\n    set cartservices to all items in list except matching id.quantity -1.\n    */\n    const quantity = getServiceQuantity(id);\n    if (quantity === 1) {\n      // if there is 1 item in cart\n      deleteFromCart(id);\n    } else {\n      // more than 1 item in cart\n      setCartServices(cartServices.map(service => service.id === id ? {\n        ...service,\n        quantity: service.quantity - 1\n      } : service));\n    }\n  };\n  const deleteFromCart = id => {\n    /* \n    description: \n    deletes entire object from cart.\n    pseudocode:\n    if object meets a condition, add it to array.\n    */\n    setCartServices(cartServices => cartServices.filter(currentService => {\n      return currentService.id !== id;\n    }));\n  };\n  const getTotalCost = () => {\n    let totalCost = 0;\n    cartServices.map(cartItem => {\n      const serviceData = getServiceData(cartItem.id);\n      totalCost += serviceData.price * cartItem.quantity;\n    });\n  };\n  const contextValue = {\n    items: cartServices,\n    getServiceQuantity,\n    addOneToCart,\n    removeOneFromCart,\n    deleteFromCart,\n    getTotalCost\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n_s(CartProvider, \"nO9DaQIp5RxfqfisuBQairM44p4=\");\n_c = CartProvider;\nexport default CartProvider;\n// Context (cart, addToCard, removeCart)\n// Provider -> gives your React app access to all the things in your context\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","serviceArray","getServiceData","jsxDEV","_jsxDEV","CartContext","items","getServiceQuantity","addOneToCart","removeOneFromCart","deleteFromCart","getTotalCost","CartProvider","_ref","_s","children","cartServices","setCartServices","id","_cartServices$find","quantity","find","service","undefined","map","filter","currentService","totalCost","cartItem","serviceData","price","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yousuf/Dev/albertaducts-checkout/src/CartContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\nimport { serviceArray, getServiceData } from './serviceStore';\n\nexport const CartContext = createContext({\n    items: [],\n    getServiceQuantity: () => {},\n    addOneToCart: () => {},\n    removeOneFromCart: () => {},\n    deleteFromCart: () => {},\n    getTotalCost: () => {}\n});\n\nexport function CartProvider({children}) {\n    const [cartServices, setCartServices] = useState([]);\n\n    // {id: 1, quantity: 2} data we are working with\n    const getServiceQuantity = (id) => {\n        const quantity = cartServices.find(service => service.id === id)?.quantity;\n        if(quantity === undefined) {\n            return 0;\n        }\n        return quantity;\n    }\n    \n    function addOneToCart(id) {\n        /* \n            description: function thats adds one to quantity\n            pseudocode:\n            get service quantity by id\n            if service is not in cart, set quantity to 1\n            else add 1 to the servicequantity.\n        */\n        const quantity = getServiceQuantity(id);\n        if (quantity === 0) { // service is not in cart\n            setCartServices(\n                [\n                    ...cartServices,\n                    {\n                        id: id,\n                        quantity: 1\n                    }\n                ]\n            )\n        } else { // service is in cart\n            setCartServices(\n                cartServices.map(\n                    service =>\n                     service.id === id // if condition\n                     ? { ...service, quantity: service.quantity + 1} //if statement is true\n                     : service  //\n                )   //if statement is false\n            )\n        }\n    }\n    \n    const removeOneFromCart = (id) => {\n        /* \n        description: \n        removes 1 from quantity from matching id. if it has 1 item, and user removes, deletes full instance.\n        pseudocode:\n        if quantity equal to 1, remove it from array.\n        set cartservices to all items in list except matching id.quantity -1.\n        */\n        const quantity = getServiceQuantity(id);\n        if (quantity === 1) { // if there is 1 item in cart\n            deleteFromCart(id);\n        } else { // more than 1 item in cart\n            setCartServices(\n                cartServices.map(\n                    service =>\n                    service.id === id \n                    ? { ...service, quantity: service.quantity - 1}\n                    : service       \n                )\n            );\n        }\n    }\n    \n    const deleteFromCart = (id) => {\n        /* \n        description: \n        deletes entire object from cart.\n        pseudocode:\n        if object meets a condition, add it to array.\n        */\n        setCartServices(\n            cartServices => cartServices.filter(currentService => {\n                return currentService.id !== id;\n            })\n        )\n    }\n\n    const getTotalCost = () => {\n        let totalCost = 0;\n        cartServices.map((cartItem) => {\n            const serviceData = getServiceData(cartItem.id);\n            totalCost += (serviceData.price * cartItem.quantity);\n        });\n    }\n\n    const contextValue = {\n        items: cartServices,\n        getServiceQuantity,\n        addOneToCart,\n        removeOneFromCart,\n        deleteFromCart,\n        getTotalCost\n    }\n\n    return (\n        <CartContext.Provider value={contextValue}>\n            {children}\n        </CartContext.Provider>\n    )\n}\n\nexport default CartProvider;\n// Context (cart, addToCard, removeCart)\n// Provider -> gives your React app access to all the things in your context"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,SAASC,YAAY,EAAEC,cAAc,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC;EACrCO,KAAK,EAAE,EAAE;EACTC,kBAAkB,EAAEA,CAAA,KAAM,CAAC,CAAC;EAC5BC,YAAY,EAAEA,CAAA,KAAM,CAAC,CAAC;EACtBC,iBAAiB,EAAEA,CAAA,KAAM,CAAC,CAAC;EAC3BC,cAAc,EAAEA,CAAA,KAAM,CAAC,CAAC;EACxBC,YAAY,EAAEA,CAAA,KAAM,CAAC;AACzB,CAAC,CAAC;AAEF,OAAO,SAASC,YAAYA,CAAAC,IAAA,EAAa;EAAAC,EAAA;EAAA,IAAZ;IAACC;EAAQ,CAAC,GAAAF,IAAA;EACnC,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAMO,kBAAkB,GAAIW,EAAE,IAAK;IAAA,IAAAC,kBAAA;IAC/B,MAAMC,QAAQ,IAAAD,kBAAA,GAAGH,YAAY,CAACK,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACJ,EAAE,KAAKA,EAAE,CAAC,cAAAC,kBAAA,uBAA/CA,kBAAA,CAAiDC,QAAQ;IAC1E,IAAGA,QAAQ,KAAKG,SAAS,EAAE;MACvB,OAAO,CAAC;IACZ;IACA,OAAOH,QAAQ;EACnB,CAAC;EAED,SAASZ,YAAYA,CAACU,EAAE,EAAE;IACtB;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,MAAME,QAAQ,GAAGb,kBAAkB,CAACW,EAAE,CAAC;IACvC,IAAIE,QAAQ,KAAK,CAAC,EAAE;MAAE;MAClBH,eAAe,CACX,CACI,GAAGD,YAAY,EACf;QACIE,EAAE,EAAEA,EAAE;QACNE,QAAQ,EAAE;MACd,CAAC,CAET,CAAC;IACL,CAAC,MAAM;MAAE;MACLH,eAAe,CACXD,YAAY,CAACQ,GAAG,CACZF,OAAO,IACNA,OAAO,CAACJ,EAAE,KAAKA,EAAE,CAAC;MAAA,EAChB;QAAE,GAAGI,OAAO;QAAEF,QAAQ,EAAEE,OAAO,CAACF,QAAQ,GAAG;MAAC,CAAC,CAAC;MAAA,EAC9CE,OAAO,CAAE;MAChB,CAAC,CAAG;MACR,CAAC;IACL;EACJ;;EAEA,MAAMb,iBAAiB,GAAIS,EAAE,IAAK;IAC9B;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,MAAME,QAAQ,GAAGb,kBAAkB,CAACW,EAAE,CAAC;IACvC,IAAIE,QAAQ,KAAK,CAAC,EAAE;MAAE;MAClBV,cAAc,CAACQ,EAAE,CAAC;IACtB,CAAC,MAAM;MAAE;MACLD,eAAe,CACXD,YAAY,CAACQ,GAAG,CACZF,OAAO,IACPA,OAAO,CAACJ,EAAE,KAAKA,EAAE,GACf;QAAE,GAAGI,OAAO;QAAEF,QAAQ,EAAEE,OAAO,CAACF,QAAQ,GAAG;MAAC,CAAC,GAC7CE,OACN,CACJ,CAAC;IACL;EACJ,CAAC;EAED,MAAMZ,cAAc,GAAIQ,EAAE,IAAK;IAC3B;AACR;AACA;AACA;AACA;AACA;IACQD,eAAe,CACXD,YAAY,IAAIA,YAAY,CAACS,MAAM,CAACC,cAAc,IAAI;MAClD,OAAOA,cAAc,CAACR,EAAE,KAAKA,EAAE;IACnC,CAAC,CACL,CAAC;EACL,CAAC;EAED,MAAMP,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIgB,SAAS,GAAG,CAAC;IACjBX,YAAY,CAACQ,GAAG,CAAEI,QAAQ,IAAK;MAC3B,MAAMC,WAAW,GAAG3B,cAAc,CAAC0B,QAAQ,CAACV,EAAE,CAAC;MAC/CS,SAAS,IAAKE,WAAW,CAACC,KAAK,GAAGF,QAAQ,CAACR,QAAS;IACxD,CAAC,CAAC;EACN,CAAC;EAED,MAAMW,YAAY,GAAG;IACjBzB,KAAK,EAAEU,YAAY;IACnBT,kBAAkB;IAClBC,YAAY;IACZC,iBAAiB;IACjBC,cAAc;IACdC;EACJ,CAAC;EAED,oBACIP,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAhB,QAAA,EACrCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAACvB,EAAA,CAtGeF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAwG5B,eAAeA,YAAY;AAC3B;AACA;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}